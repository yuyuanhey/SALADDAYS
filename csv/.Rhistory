install.packages("XLConnect")
source('C:/Users/user/Downloads/hw1Q2.R', echo=TRUE)
myoutlier(1:10)
input = 1:10
input
myoutlier(input)
source('C:/Users/user/Downloads/hw164541_b04705004_e182d54323782b3_1/hw10-35.R', echo=TRUE)
source('C:/Users/user/Downloads/hw164541_b04705004_e182d54323782b3_1/hw10-35.R', echo=TRUE)
source('C:/Users/user/Downloads/hw164541_b04705004_e182d54323782b3_1/hw10-35.R', echo=TRUE)
install.packages("XLConnectJars")
Z    <- abs(qnorm((1-CL)/2))
source('C:/Users/user/Downloads/hw164541_b04705004_e182d54323782b3_1/hw10-35.R', echo=TRUE)
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre7')
R.version
help("XLConnect")
install.packages("XLConnect")
help("test")
help("htest")
source('C:/Users/user/Desktop/hw11.R', echo=TRUE)
data1 = 1:10
myhtest(data1, 0.3, "tail")
myhtest(data1, 0.3, "righttail")
install.packages(translateR)
install.packages("translateR")
help(translateR)
help(translate)
help("translate")
source('C:/Users/user/Desktop/testing_translation.R', echo=TRUE)
help(translateR)
install.packages("httr")
install.packages("httr")
source('C:/Users/user/Desktop/facebook.R', echo=TRUE)
res
content(res)
source('C:/Users/user/Desktop/facebook.R', echo=TRUE)
temp
temp$friends
temp$groups
source('C:/Users/user/Desktop/facebook.R', echo=TRUE)
temp
temp2
temp2$next
temp2$paging$`next`
source('C:/Users/user/Desktop/facebook.R', echo=TRUE)
temp2
install.packages("ggplot2")
install.packages("Ecdat")
library("Ecdat")
source('C:/Users/user/Desktop/testing_translation.R', echo=TRUE)
typeof(try)
try
typeof try
vector
source('C:/Users/user/Desktop/testing_translation.R', echo=TRUE)
source('C:/Users/user/Desktop/testing_translation.R', echo=TRUE)
source('C:/Users/user/Desktop/testing_translation.R', echo=TRUE)
source('C:/Users/user/Desktop/testing_translation.R', echo=TRUE)
source('C:/Users/user/Desktop/testing_translation.R', echo=TRUE)
source('C:/Users/user/Desktop/testing_translation.R', echo=TRUE)
getGoogleLanguages()
source('C:/Users/user/Desktop/testing_translation.R', echo=TRUE)
source('C:/Users/user/Desktop/testing_translation.R', echo=TRUE)
google.vector.out
try
?translate
?vector
typeof("C")
source('C:/Users/user/Desktop/testing_translation.R', echo=TRUE)
source('C:/Users/user/Desktop/testing_translation.R', echo=TRUE)
google.vector.out
try
google.vector.out <- translate(content.vec = try,
google.api.key = "AIzaSyAzOnX_NszE7AjpYBQi6zcmylyt3K684PU",
source.lang = 'en',
target.lang = 'zh-TW')
source('C:/Users/user/Desktop/testing_translation.R', echo=TRUE)
source('C:/Users/user/Desktop/testing_translation.R', echo=TRUE)
?translate
library(NetData)
View(Net)
?NetData
View(NetData)
data(studentnets.S641, package="NetData")
View(studentnets.S641)
data <- data(studentnets.S641, package="NetData")
View(data)
data <- data("studentnets.S641", package="NetData")
View(data)
data <- data('studentnets.S641', package="NetData")
View(data)
?google.language
source('C:/Users/user/Desktop/testing_translation.R', echo=TRUE)
source('C:/Users/user/Desktop/testing_translation.R', echo=TRUE)
source('C:/Users/user/Desktop/testing_translation.R', echo=TRUE)
source('C:/Users/user/Desktop/testing_translation.R', echo=TRUE)
View(programs.csv)
programs.csv$place
source('C:/Users/user/Desktop/testing_translation.R', echo=TRUE)
source('C:/Users/user/Desktop/testing_translation.R', echo=TRUE)
?translate
source('C:/Users/user/Desktop/testing_translation.R', echo=TRUE)
source('C:/Users/user/Desktop/testing_translation.R', echo=TRUE)
source('C:/Users/user/Desktop/testing_translation.R', echo=TRUE)
View(translated)
programs.csv$plate
programs.csv$place
" 西班牙"
?Sys.setlocale
source('C:/Users/user/Desktop/testing_translation.R', encoding = 'UTF-8', echo=TRUE)
Sys.setlocale(locale = "UTF8")
Sys.setlocale(locale = "UTF-8")
Sys.setlocale(category = "LC_ALL", locale = "cht")
programs.csv[,1]:[,100]
programs.csv <- read.csv("C:/Users/user/Documents/GitHub/SALADDAYS/csv/testTranslate.csv", header = TRUE, colClasses = 'character')
str(programs.csv$place)
programs.csv
str(programs.csv)
str(programs.csv$place)
?str
str(1:12)
source('C:/Users/user/Desktop/testing.R', echo=TRUE)
source('C:/Users/user/Desktop/testing.R', echo=TRUE)
getGoogleLanguages()
?getGoogleLanguages()
source('C:/Users/user/Desktop/testing.R', echo=TRUE)
translated$place
?translate
?title
title(programs.csv)
programs.csv[1,]
source('C:/Users/user/Desktop/testing.R', echo=TRUE)
source('C:/Users/user/Desktop/testing.R', echo=TRUE)
source('C:/Users/user/Desktop/testing.R', echo=TRUE)
source('C:/Users/user/Desktop/testing.R', echo=TRUE)
source('C:/Users/user/Desktop/testing.R', echo=TRUE)
source('C:/Users/user/Desktop/testing.R', echo=TRUE)
googleTranslate <-
function(x, api.key, source.lang, target.lang){
base <- 'https://www.googleapis.com/language/translate/v2?'
key.str <- paste('key=', api.key, sep = '')
query <- paste('&q=', curlEscape(x), sep = '')
source.str <- paste('&source=', source.lang, sep = '')
target.str <- paste('&target=', target.lang, sep = '')
api.url <- paste(base, key.str, query, source.str, target.str, sep = '')
translated <- fromJSON(getURL(api.url, .opts = list(ssl.verifypeer = FALSE)))$data$translations[[1]]
return(translated)
}
?curlEscape
googleTranslate(programs.csv$place, "AIzaSyAzOnX_NszE7AjpYBQi6zcmylyt3K684PU", "zh-TW", "en")
install.packages("RCurl")
install.packages("RCurl")
googleTranslate <-
function(x, api.key, source.lang, target.lang){
base <- 'https://www.googleapis.com/language/translate/v2?'
key.str <- paste('key=', api.key, sep = '')
query <- paste('&q=', curlEscape(x), sep = '')
source.str <- paste('&source=', source.lang, sep = '')
target.str <- paste('&target=', target.lang, sep = '')
api.url <- paste(base, key.str, query, source.str, target.str, sep = '')
translated <- fromJSON(getURL(api.url, .opts = list(ssl.verifypeer = FALSE)))$data$translations[[1]]
return(translated)
}
translated2 = googleTranslate(programs.csv$place, "AIzaSyAzOnX_NszE7AjpYBQi6zcmylyt3K684PU", "zh-TW", "en")
googleTranslate <-
function(x, api.key, source.lang, target.lang){
base <- 'https://www.googleapis.com/language/translate/v2?'
key.str <- paste('key=', api.key, sep = '')
query <- paste('&q=', curlEscape(x), sep = '')
source.str <- paste('&source=', source.lang, sep = '')
target.str <- paste('&target=', target.lang, sep = '')
api.url <- paste(base, key.str, query, source.str, target.str, sep = '')
print(api.url)
translated <- fromJSON(getURL(api.url, .opts = list(ssl.verifypeer = FALSE)))$data$translations[[1]]
return(translated)
}
translated2 = googleTranslate(programs.csv$place, "AIzaSyAzOnX_NszE7AjpYBQi6zcmylyt3K684PU", "zh-TW", "en")
print(api.url)
debugSource('C:/Users/user/Desktop/testing.R', echo=TRUE)
source('C:/Users/user/Desktop/testing.R', echo=TRUE)
source('C:/Users/user/Desktop/testing.R', echo=TRUE)
source('C:/Users/user/Desktop/testing.R', echo=TRUE)
test = str(programs.csv$title)
test
?translate
rm(list = ls())
library(translateR)
programs.csv <- read.csv("C:/Users/user/Documents/GitHub/SALADDAYS/csv/testTranslate.csv", header = TRUE, colClasses = 'character')
str(programs.csv$title)
test<- programs.csv$place
test
translated <- translate(content.vec=test
#                        dataset = programs.csv,
#                        content.field = 'title',
google.api.key = "AIzaSyAzOnX_NszE7AjpYBQi6zcmylyt3K684PU",  #must sign up to get google API key
source.lang = 'zh-TW', #source language google API translates from; en = english
target.lang = 'en') #language google API is to translate to; tr = turkish
View(translated)
translate(content.vec=test
#                        dataset = programs.csv,
#                        content.field = 'title',
google.api.key = "AIzaSyAzOnX_NszE7AjpYBQi6zcmylyt3K684PU",  #must sign up to get google API key
source.lang = 'zh-TW', #source language google API translates from; en = english
target.lang = 'en')
source('C:/Users/user/Desktop/testing.R', echo=TRUE)
test
translated
source('C:/Users/user/Desktop/testing.R', echo=TRUE)
data(enron)
try = data(enron)
try
data(enron)
google.dataset.out <- translate(dataset = enron,
content.field = 'email',
google.api.key = my.api.key,
source.lang = 'en',
target.lang = 'de')
data(enron)
google.dataset.out <- translate(dataset = enron,
content.field = 'email',
google.api.key = "AIzaSyAzOnX_NszE7AjpYBQi6zcmylyt3K684PU",
source.lang = 'en',
target.lang = 'de')
google.dataset.out
enron$email
data(enron)
google.dataset.out <- translate(dataset = enron,
content.field = 'email',
google.api.key = "AIzaSyAzOnX_NszE7AjpYBQi6zcmylyt3K684PU",
source.lang = 'en',
target.lang = 'de')
View(google.dataset.out)
View(enron$email)
View(enron$email)
getGoogleLanguages()
data(enron)
google.dataset.out <- translate(dataset = enron,
content.field = 'email',
google.api.key = "AIzaSyAzOnX_NszE7AjpYBQi6zcmylyt3K684PU",
source.lang = 'de',
target.lang = 'en')
View(google.dataset.out)
translated <- translate(content.vec=test,
#                        dataset = programs.csv,
#                        content.field = 'title',
google.api.key = "AIzaSyAzOnX_NszE7AjpYBQi6zcmylyt3K684PU",  #must sign up to get google API key
source.lang = 'en', #source language google API translates from; en = english
target.lang = 'zh-TW') #language google API is to translate to; tr = turkish
print(translated)
translated <- translate(content.vec=test,
#                        dataset = programs.csv,
#                        content.field = 'title',
google.api.key = "AIzaSyAzOnX_NszE7AjpYBQi6zcmylyt3K684PU",  #must sign up to get google API key
source.lang = 'en', #source language google API translates from; en = english
target.lang = 'zh-TW') #language google API is to translate to; tr = turkish
View(google.dataset.out)
View(google.dataset.out)
data(enron)
google.dataset.out <- translate(dataset = enron,
content.field = 'email',
google.api.key = "AIzaSyAzOnX_NszE7AjpYBQi6zcmylyt3K684PU",
source.lang = 'de',
target.lang = 'en')
View(google.dataset.out)
data(enron)
google.dataset.out <- translate(dataset = enron,
content.field = 'email',
google.api.key = "AIzaSyAzOnX_NszE7AjpYBQi6zcmylyt3K684PU",
source.lang = 'en',
target.lang = 'de')
View(google.dataset.out)
programs.csv <- read.csv("C:/Users/user/Documents/GitHub/SALADDAYS/csv/testTranslate.csv", header = TRUE, colClasses = 'character')
str(programs.csv$title)
test<- programs.csv$place
translated <- translate(content.vec=test,
#                        dataset = programs.csv,
#                        content.field = 'title',
google.api.key = "AIzaSyAzOnX_NszE7AjpYBQi6zcmylyt3K684PU",  #must sign up to get google API key
source.lang = 'zh-TW', #source language google API translates from; en = english
target.lang = 'en') #language google API is to translate to; tr = turkish
print(translated)
rm(list = ls())
library(translateR)
programs.csv <- read.csv("C:/Users/user/Documents/GitHub/SALADDAYS/csv/testTranslate.csv", header = TRUE, colClasses = 'character')
str(programs.csv$title)
test<- programs.csv$place
translated <- translate(content.vec=test,
#                        dataset = programs.csv,
#                        content.field = 'title',
google.api.key = "AIzaSyAzOnX_NszE7AjpYBQi6zcmylyt3K684PU",  #must sign up to get google API key
source.lang = 'ne', #source language google API translates from; en = english
target.lang = 'en') #language google API is to translate to; tr = turkish
print(translated)
translated
test
rm(list = ls())
library(translateR)
programs.csv <- read.csv("C:/Users/user/Documents/GitHub/SALADDAYS/csv/testTranslate.csv", header = TRUE, colClasses = 'character')
str(programs.csv$title)
test<- programs.csv$place
translated <- translate(content.vec=test,
#                        dataset = programs.csv,
#                        content.field = 'title',
google.api.key = "AIzaSyAzOnX_NszE7AjpYBQi6zcmylyt3K684PU",  #must sign up to get google API key
source.lang = 'zh-TW', #source language google API translates from; en = english
target.lang = 'en') #language google API is to translate to; tr = turkish
print(translated)
test
getGoogleLanguages()
rm(list = ls())
library(translateR)
programs.csv <- read.csv("C:/Users/user/Documents/GitHub/SALADDAYS/csv/testTranslate.csv", header = TRUE, colClasses = 'character')
str(programs.csv$title)
test<- programs.csv$place
translated <- translate(content.vec=test,
#                        dataset = programs.csv,
#                        content.field = 'title',
google.api.key = "AIzaSyAzOnX_NszE7AjpYBQi6zcmylyt3K684PU",  #must sign up to get google API key
source.lang = 'ne', #source language google API translates from; en = english
target.lang = 'en') #language google API is to translate to; tr = turkish
print(translated)
getGoogleLanguages()
rm(list = ls())
library(translateR)
programs.csv <- read.csv("C:/Users/user/Documents/GitHub/SALADDAYS/csv/testTranslate.csv", header = TRUE, colClasses = 'character')
str(programs.csv$title)
test<- programs.csv$place
translated <- translate(content.vec=test,
#                        dataset = programs.csv,
#                        content.field = 'title',
google.api.key = "AIzaSyAzOnX_NszE7AjpYBQi6zcmylyt3K684PU",  #must sign up to get google API key
source.lang = 'zh-CN', #source language google API translates from; en = english
target.lang = 'en') #language google API is to translate to; tr = turkish
print(translated)
content.vec=test
translated <- translate(content.vec=test,
#                        dataset = programs.csv,
#                        content.field = 'title',
google.api.key = "AIzaSyAzOnX_NszE7AjpYBQi6zcmylyt3K684PU",  #must sign up to get google API key
source.lang = 'zh-TW', #source language google API translates from; en = english
target.lang = 'en') #language google API is to translate to; tr = turkish
print(translated)
?translate
is.utf8(test)
install.packages("tau")
install.packages("tau")
translated <- translate(content.vec=test,
#                        dataset = programs.csv,
#                        content.field = 'title',
google.api.key = "AIzaSyAzOnX_NszE7AjpYBQi6zcmylyt3K684PU",  #must sign up to get google API key
source.lang = 'zh-TW', #source language google API translates from; en = english
target.lang = 'en') #language google API is to translate to; tr = turkish
print(translated)
ans
source('C:/Users/user/Desktop/testing.R', echo=TRUE)
ans
source('C:/Users/user/Desktop/testing.R', echo=TRUE)
source('C:/Users/user/Desktop/testing.R', echo=TRUE)
source('C:/Users/user/Desktop/testing.R', echo=TRUE)
source('C:/Users/user/Desktop/testing.R', echo=TRUE)
ans
source('C:/Users/user/Desktop/testing.R', echo=TRUE)
ans
source('C:/Users/user/Desktop/testing.R', echo=TRUE)
ans2
anscsv <- "ans.csv"
ans    <- read.csv(anscsv)
ans
rm(list = ls())
options(java.parameters = "-Xmx4g")
library(translateR)
library(ggplot2)
library(XLConnect)
setwd("C:/Users/user/Documents/GitHub/SALADDAYS/csv")
worldcsv = "World.csv"
world    <- read.csv(worldcsv)
sizeW    <- nrow(world)
anscsv <- "ans.csv"
ans    <- read.csv(anscsv)
ans2 <- data.frame()
ans
sizeA  <- nrow(ans)
sizeA
source('C:/Users/user/Desktop/testing2.R', echo=TRUE)
?level
ans$Var1[1]
world$country[1]
source('C:/Users/user/Desktop/testing2.R', echo=TRUE)
v1 == v2
ans2 <- data.frame()
temp <- data.frame()
ans2 = ans2 + temp[which(ans$Var1 == world$country)]
source('C:/Users/user/Desktop/testing2.R', echo=TRUE)
